[versions]
androidDriver = "2.1.0"
calendarComposeMultiplatform = "2.8.0"
coilCompose = "3.3.0"
haze = "1.6.10"
lifecycleCommon = "2.9.2"
materialIconsExtended = "1.7.3"
multiplatformSettingsCoroutines = "1.3.0"
multiplatformSettingsVersion = "1.3.0"
navigationCompose = "2.9.0-beta05"
permissions = "0.20.0"
sqlDelight = "2.1.0"
firebaseBom = "34.1.0"
supabaseBom = "3.2.2"
firebaseCommonKtx = "20.3.3"
kotlin = "2.2.10"
compose = "1.8.2"
koinCore = "4.1.0"
koinAndroid = "4.1.0"
gradle = "8.9.1"
statelyCommon = "2.1.0"
statelyIsoCollections = "2.1.0"
statelyIsolate = "2.1.0"
multiplatformSettings = "1.3.0"
koin-compose = "4.1.0"
core = "1.17.0"
jna = "5.17.0"
koalaplotCore = "0.9.1"
kotlinxCoroutinesSwing = "1.10.2"
kotlinxSerializationJson = "1.9.0"
kotlinxDateTime = "0.7.1"
material3WindowSizeClassMultiplatform = "0.5.0"
napier = "2.7.1"
core-library-desugaring = "2.1.5"
toast4j = "0.2.0"
compose-activity = "1.10.1"
spotless = "7.2.1"
accompanist-systemUIController = "0.36.0"
ktor = "3.2.3"

google-services-plugin = "4.4.3"
crashlitycs-plugin = "3.0.6"
firebase-gitlive-sdk = "2.3.0"

[libraries]
android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "androidDriver" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilCompose" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coilCompose" }
coil-gif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coilCompose" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coilCompose" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coilCompose" }
core = { module = "androidx.core:core", version.ref = "core" }
coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "androidDriver" }
haze = { module = "dev.chrisbanes.haze:haze", version.ref = "haze" }
haze-materials = { module = "dev.chrisbanes.haze:haze-materials", version.ref = "haze" }
jna = { module = "net.java.dev.jna:jna", version.ref = "jna" }
koalaplot-core = { module = "io.github.koalaplot:koalaplot-core", version.ref = "koalaplotCore" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }

koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose"}
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin-compose" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin-compose" }

kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutinesSwing" }
kotlinX-serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerializationJson" }
lifecycle-common = { module = "org.jetbrains.androidx.lifecycle:lifecycle-common", version.ref = "lifecycleCommon" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleCommon" }
material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
material3-window-size-multiplatform = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "material3WindowSizeClassMultiplatform" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettingsVersion" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettingsCoroutines" }
multiplatform-settings-make-observable = { module = "com.russhwolf:multiplatform-settings-make-observable", version.ref = "multiplatformSettingsCoroutines" }
native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "androidDriver" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
permissions = { module = "dev.icerock.moko:permissions", version.ref = "permissions" }
permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "permissions" }
permissions-notifications = { module = "dev.icerock.moko:permissions-notifications", version.ref = "permissions" }
primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "androidDriver" }
sqlDelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinX-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
multiplatformSettings-noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }

firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-common-ktx = { module = "com.google.firebase:firebase-common" }
firebase-android-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics" }

gitlive-firebase-kotlin-crashlytics = { module = "dev.gitlive:firebase-crashlytics", version.ref = "firebase-gitlive-sdk" }
gitlive-firebase-common = { module = "dev.gitlive:firebase-common", version.ref = "firebase-gitlive-sdk" }
gitlive-firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "firebase-gitlive-sdk" }
gitlive-firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "firebase-gitlive-sdk" }
gitlive-firebase-storage = { module = "dev.gitlive:firebase-storage", version.ref = "firebase-gitlive-sdk" }

supabase-bom = { module = "o.github.jan-tennert.supabase:bom", version.ref = "supabaseBom" }
supabase-storage-ktx = { module = "io.github.jan-tennert.supabase:storage-kt", version.ref = "supabaseBom" }

compose-activity = { module = "androidx.activity:activity-compose", version.ref = "compose-activity" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }
sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "androidDriver" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "statelyCommon" }
stately-iso-collections = { module = "co.touchlab:stately-iso-collections", version.ref = "statelyIsoCollections" }
stately-isolate = { module = "co.touchlab:stately-isolate", version.ref = "statelyIsolate" }
toast4j = { module = "de.mobanisto:toast4j", version.ref = "toast4j" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

core-library-desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "core-library-desugaring" }
accompanist-systemUIController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist-systemUIController" }
calendar-compose-multiplatform = { module = "com.kizitonwose.calendar:compose-multiplatform", version.ref = "calendarComposeMultiplatform" }

stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }

[plugins]
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose" }
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
nativeCocoapod = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
android-kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "gradle" }
android-application = { id = "com.android.application", version.ref = "gradle" }
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinX-serialization-plugin = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight-plugin = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
google-services = { id = "com.google.gms.google-services", version.ref = "google-services-plugin" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlitycs-plugin" }