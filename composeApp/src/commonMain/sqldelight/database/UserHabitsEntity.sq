-- UserHabitsEntity.sq

CREATE TABLE UserHabitsEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,  -- Auto-incrementing ID
    habitId TEXT NOT NULL,                          -- Reference to predefined habit ID
    startDate TEXT NOT NULL,                        -- Start date of the habit (ISO 8601 format)
    endDate TEXT NOT NULL,                      -- End date of the habit (ISO 8601 format)
    daysOfWeek TEXT NOT NULL,                       -- Comma-separated list of days (e.g., "MONDAY,WEDNESDAY")
    timeOfDay INTEGER NOT NULL,                     -- Time of day (e.g. Morning, Afternoon) origin
    reminderEnabled INTEGER DEFAULT 0 NOT NULL,     -- Whether a reminder is enabled (0 = false, 1 = true)
    reminderTime TEXT DEFAULT NULL                 -- Time for reminder notification in HH:MM format (e.g., "08:00")
);

-- Insert a new user habit
insertUserHabit:
INSERT INTO UserHabitsEntity (habitId, startDate, endDate, daysOfWeek, timeOfDay, reminderEnabled, reminderTime)
VALUES (?, ?, ?, ?, ?, ?, ?);

-- Select all user habits
selectAllUserHabitsEntity:
SELECT * FROM UserHabitsEntity;

-- Select a user habit by ID
selectUserHabitById:
SELECT * FROM UserHabitsEntity
WHERE id = ?;

-- Select a user habit by remote ID
selectUserHabitByRemoteId:
SELECT * FROM UserHabitsEntity
WHERE habitId = ?;

-- Update a user habit by ID
updateUserHabitById:
UPDATE UserHabitsEntity SET
    startDate = :startDate,
    endDate = :endDate,
    daysOfWeek = :daysOfWeek
WHERE id = :id;

-- Update reminder settings for a habit
updateHabitReminder:
UPDATE UserHabitsEntity SET
    reminderEnabled = :reminderEnabled,
    reminderTime = :reminderTime
WHERE id = :id;

-- Delete a user habit by ID
deleteUserHabitById:
DELETE FROM UserHabitsEntity
WHERE id = ?;

-- Get the last inserted row ID
lastInsertRowId:
SELECT last_insert_rowid();